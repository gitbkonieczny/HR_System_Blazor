// <auto-generated />
using System;
using HUDEwiBlazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HUDEwiBlazor.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20200902140848_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Calendar", b =>
                {
                    b.Property<DateTime>("DateID")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BillingPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("DayID")
                        .HasColumnType("int");

                    b.Property<int?>("DayOfBillingPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("DayOfMonth")
                        .HasColumnType("int");

                    b.Property<int?>("DayOfQuarter")
                        .HasColumnType("int");

                    b.Property<int?>("DayofYear")
                        .HasColumnType("int");

                    b.Property<bool?>("IsHoliday")
                        .HasColumnType("bit");

                    b.Property<int?>("MonthID")
                        .HasColumnType("int");

                    b.Property<int?>("QuarterOfYear")
                        .HasColumnType("int");

                    b.Property<int?>("WeekOfBillingPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("WeekOfMonth")
                        .HasColumnType("int");

                    b.Property<int?>("WeekOfQuarter")
                        .HasColumnType("int");

                    b.Property<int?>("WorkingWeekOfYear")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("DateID");

                    b.HasIndex("DateID")
                        .IsUnique();

                    b.HasIndex("DayID");

                    b.HasIndex("WorkingWeekOfYear");

                    b.HasIndex("Year");

                    b.HasIndex("MonthID", "Year");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Child", b =>
                {
                    b.Property<int?>("ChildID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChildBorn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.HasKey("ChildID");

                    b.HasIndex("ChildID")
                        .IsUnique();

                    b.HasIndex("EmployeeID");

                    b.ToTable("Child");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Client", b =>
                {
                    b.Property<int?>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KRS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nip")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Regon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Voivodeship")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.HasIndex("ClientID")
                        .IsUnique();

                    b.HasIndex("FirstName");

                    b.HasIndex("Name");

                    b.HasIndex("Nip")
                        .IsUnique()
                        .HasFilter("[Nip] IS NOT NULL");

                    b.HasIndex("Regon")
                        .IsUnique()
                        .HasFilter("[Regon] IS NOT NULL");

                    b.HasIndex("SurName");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Codes", b =>
                {
                    b.Property<int?>("CodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeID");

                    b.HasIndex("Code");

                    b.HasIndex("CodeID")
                        .IsUnique();

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Day", b =>
                {
                    b.Property<int>("DayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DayName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("DayID");

                    b.HasIndex("DayID")
                        .IsUnique();

                    b.ToTable("Days");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.DayActions", b =>
                {
                    b.Property<int?>("DayActionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChildID")
                        .HasColumnType("int");

                    b.Property<int?>("CodeID")
                        .IsRequired()
                        .HasColumnName("Code")
                        .HasColumnType("int");

                    b.Property<bool?>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("ConfirmedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeID")
                        .IsRequired()
                        .HasColumnName("Employee")
                        .HasColumnType("int");

                    b.Property<int?>("EventID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("From")
                        .HasColumnType("time");

                    b.Property<DateTime>("FromDateID")
                        .HasColumnName("FromDateID")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromShift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("ScheduleColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowOnCard")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("To")
                        .HasColumnType("time");

                    b.Property<DateTime>("ToDateID")
                        .HasColumnName("ToDateID")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToShift")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DayActionsID");

                    b.HasIndex("ChildID");

                    b.HasIndex("CodeID");

                    b.HasIndex("Confirmed");

                    b.HasIndex("DayActionsID")
                        .IsUnique();

                    b.HasIndex("EmployeeID");

                    b.HasIndex("EventID");

                    b.HasIndex("FromDateID");

                    b.HasIndex("ToDateID");

                    b.HasIndex("EmployeeID", "CodeID");

                    b.HasIndex("EmployeeID", "CodeID", "Confirmed");

                    b.HasIndex("ChildID", "CodeID", "FromDateID", "Confirmed");

                    b.HasIndex("EmployeeID", "CodeID", "FromDateID", "ToDateID", "Confirmed");

                    b.ToTable("DayActions");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Departments", b =>
                {
                    b.Property<int?>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.HasIndex("DepartmentID")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Employee", b =>
                {
                    b.Property<int?>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("ForcePasswordChange")
                        .HasColumnType("bit");

                    b.Property<string>("GUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HolidayCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolidayCountryState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PReset")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SessionTime")
                        .HasColumnType("int");

                    b.Property<string>("ShortCut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeID")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.HolidayEventsList", b =>
                {
                    b.Property<int?>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventID");

                    b.HasIndex("Count");

                    b.HasIndex("EventID")
                        .IsUnique();

                    b.ToTable("HolidayEventsList");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.HolidaysApi", b =>
                {
                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("locations")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("date", "country", "name", "type", "locations");

                    b.HasIndex("date", "name");

                    b.ToTable("HolidaysApi");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.HolidaysSet", b =>
                {
                    b.Property<int?>("HolidaysSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeID")
                        .IsRequired()
                        .HasColumnName("Employee")
                        .HasColumnType("int");

                    b.Property<int?>("HolidaysGet")
                        .HasColumnType("int");

                    b.Property<int?>("HolidaysMax")
                        .HasColumnType("int");

                    b.Property<int?>("HolidaysOnDemandGet")
                        .HasColumnType("int");

                    b.Property<int?>("HolidaysOnDemandMax")
                        .HasColumnType("int");

                    b.Property<int>("Year_int")
                        .HasColumnType("int");

                    b.HasKey("HolidaysSetID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HolidaysSet");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkEmployeRoles", b =>
                {
                    b.Property<int?>("EmployeRolesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int?>("RolesID")
                        .HasColumnType("int");

                    b.HasKey("EmployeRolesID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("RolesID");

                    b.HasIndex("EmployeeID", "RolesID");

                    b.ToTable("LinkEmployeRoles");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkEmployeeMessengerGroup", b =>
                {
                    b.Property<int>("PLinkEmployeeMessengerGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int?>("groupID")
                        .HasColumnType("int");

                    b.HasKey("PLinkEmployeeMessengerGroup");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("groupID");

                    b.ToTable("LinkEmployeeMessengerGroup");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkLeaderDepartment", b =>
                {
                    b.Property<int?>("PLinkLeaderDepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("LeaderID")
                        .HasColumnType("int");

                    b.HasKey("PLinkLeaderDepartmentID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("LeaderID");

                    b.HasIndex("LeaderID", "DepartmentID");

                    b.ToTable("LinkLeaderDepartment");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkProjectDepartment", b =>
                {
                    b.Property<int?>("PLinkProjectDepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("PLinkProjectDepartmentID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("ProjectID", "DepartmentID");

                    b.ToTable("LinkProjectDepartment");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkTeamsEmployee", b =>
                {
                    b.Property<int?>("PLinkTeamsEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("PLinkTeamsEmployee");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("TeamId");

                    b.HasIndex("TeamId", "EmployeeID");

                    b.ToTable("LinkTeamsEmployee");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Messages", b =>
                {
                    b.Property<long>("messageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FromEmployee")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("ToGroup")
                        .HasColumnType("int");

                    b.Property<bool>("group_message")
                        .HasColumnType("bit");

                    b.HasKey("messageId");

                    b.HasIndex("FromEmployee");

                    b.HasIndex("ToEmployee");

                    b.HasIndex("ToGroup");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.MessengerGroups", b =>
                {
                    b.Property<int>("groupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GUID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("groupID");

                    b.HasIndex("GUID");

                    b.ToTable("MessengerGroups");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Month", b =>
                {
                    b.Property<int>("MonthID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("MonthID");

                    b.HasIndex("MonthID")
                        .IsUnique();

                    b.ToTable("Months");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Navigation", b =>
                {
                    b.Property<int>("nodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("childs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iconCss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nodeText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("nodeId");

                    b.HasIndex("nodeId")
                        .IsUnique();

                    b.ToTable("Navigations");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.OverTimeTypes", b =>
                {
                    b.Property<int?>("OverTimeTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OverTimeTypesId");

                    b.ToTable("OverTimeTypes");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.OverTimesSimple", b =>
                {
                    b.Property<int?>("OverTimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("ConfirmedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateID")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeesID")
                        .HasColumnType("int");

                    b.Property<long>("FromValueTicks")
                        .HasColumnType("bigint");

                    b.Property<int?>("OverTimeTypesId")
                        .HasColumnType("int");

                    b.Property<string>("PaidPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<bool>("SapOvertime")
                        .HasColumnType("bit");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamsTeamId")
                        .HasColumnType("int");

                    b.Property<long>("ToValueTicks")
                        .HasColumnType("bigint");

                    b.Property<string>("ToolTip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OverTimeID");

                    b.HasIndex("EmployeesID");

                    b.HasIndex("OverTimeTypesId");

                    b.HasIndex("ProjectID");

                    b.HasIndex("TeamsTeamId");

                    b.ToTable("OverTimesSimple");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.ParentHoliday", b =>
                {
                    b.Property<int?>("ParentHolidayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountHoliday")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("ParentHolidayID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("ParentHoliday");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.PasswordLink", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("PasswordLink");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.ProjectClient", b =>
                {
                    b.Property<int?>("ProjectClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProjectsProjectID")
                        .HasColumnType("int");

                    b.HasKey("ProjectClientID");

                    b.HasIndex("ClientID");

                    b.HasIndex("ProjectsProjectID");

                    b.ToTable("ProjectClient");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Projects", b =>
                {
                    b.Property<int?>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectLeaderID")
                        .HasColumnType("int");

                    b.HasKey("ProjectID");

                    b.HasIndex("ProjectID")
                        .IsUnique();

                    b.HasIndex("ProjectLeaderID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Roles", b =>
                {
                    b.Property<int?>("RolesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolesID");

                    b.HasIndex("RolesID")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Schedules", b =>
                {
                    b.Property<int?>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("From")
                        .HasColumnType("time");

                    b.Property<string>("ScheduleColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShiftID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("To")
                        .HasColumnType("time");

                    b.Property<bool>("isoverride")
                        .HasColumnType("bit");

                    b.HasKey("ScheduleID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ShiftID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Shifts", b =>
                {
                    b.Property<int?>("ShiftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("From")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("To")
                        .HasColumnType("time");

                    b.HasKey("ShiftID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("ShiftID")
                        .IsUnique();

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Teams", b =>
                {
                    b.Property<int?>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("ShiftOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftsShiftID")
                        .HasColumnType("int");

                    b.Property<int?>("TeamLeaderID")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.HasIndex("ProjectID");

                    b.HasIndex("ShiftsShiftID");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.HasIndex("TeamLeaderID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Tokens", b =>
                {
                    b.Property<int?>("TokenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeesID")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TokenID");

                    b.HasIndex("EmployeesID");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.WorkCardSign", b =>
                {
                    b.Property<string>("WorkCardSignID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Accepted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AcceptedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<int?>("EmployeesID")
                        .HasColumnType("int");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("GenerateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SignDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Signed")
                        .HasColumnType("bit");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("WorkCardSignID");

                    b.HasIndex("EmployeesID");

                    b.HasIndex("WorkCardSignID")
                        .IsUnique();

                    b.HasIndex("Month", "Year");

                    b.ToTable("WorkCardSign");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Calendar", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Day", "Day")
                        .WithMany()
                        .HasForeignKey("DayID");

                    b.HasOne("HUDEwiBlazor.Data.Models.Month", "Month")
                        .WithMany()
                        .HasForeignKey("MonthID");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Child", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.DayActions", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Codes", "Codes")
                        .WithMany("DayActions")
                        .HasForeignKey("CodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HUDEwiBlazor.Data.Models.HolidayEventsList", "HolidayEventsList")
                        .WithMany("DayActions")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.HolidaysSet", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "Employee")
                        .WithMany("HolidaysSet")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkEmployeRoles", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "Employee")
                        .WithMany("LinkEmployeRoles")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("HUDEwiBlazor.Data.Models.Roles", "Roles")
                        .WithMany("LinkEmployeRoles")
                        .HasForeignKey("RolesID");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkEmployeeMessengerGroup", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "Employee")
                        .WithMany("LinkEmployeeMessengerGroup")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HUDEwiBlazor.Data.Models.MessengerGroups", "MessengerGroups")
                        .WithMany("Members")
                        .HasForeignKey("groupID")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkLeaderDepartment", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Departments", "Departments")
                        .WithMany("LinkLeaderDepartment")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "Employee")
                        .WithMany("LinkLeaderDepartment")
                        .HasForeignKey("LeaderID");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkProjectDepartment", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Departments", "Departments")
                        .WithMany("LinkProjectDepartment")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HUDEwiBlazor.Data.Models.Projects", "Projects")
                        .WithMany("LinkProjectDepartment")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.LinkTeamsEmployee", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "Employee")
                        .WithMany("LinkTeamsEmployee")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("HUDEwiBlazor.Data.Models.Teams", "Teams")
                        .WithMany("LinkTeamsEmployee")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Messages", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "FromEmployeeObj")
                        .WithMany("MessagesFrom")
                        .HasForeignKey("FromEmployee")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "ToEmployeeObj")
                        .WithMany("MessagesTo")
                        .HasForeignKey("ToEmployee")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HUDEwiBlazor.Data.Models.MessengerGroups", "ToGroupObj")
                        .WithMany("Messages")
                        .HasForeignKey("ToGroup")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.OverTimesSimple", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "employee")
                        .WithMany("OverTimesSimple")
                        .HasForeignKey("EmployeesID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HUDEwiBlazor.Data.Models.OverTimeTypes", "OverTimeTypes")
                        .WithMany("OverTimesSimple")
                        .HasForeignKey("OverTimeTypesId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HUDEwiBlazor.Data.Models.Projects", "Projects")
                        .WithMany("OverTimesSimple")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HUDEwiBlazor.Data.Models.Teams", "Teams")
                        .WithMany()
                        .HasForeignKey("TeamsTeamId");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.ParentHoliday", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.ProjectClient", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HUDEwiBlazor.Data.Models.Projects", "Projects")
                        .WithMany()
                        .HasForeignKey("ProjectsProjectID");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Projects", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "ProjectLeader")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectLeaderID");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Schedules", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "Employee")
                        .WithMany("Schedules")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HUDEwiBlazor.Data.Models.Shifts", "Shifts")
                        .WithMany("Schedules")
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Shifts", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Projects", "Projects")
                        .WithMany("Shifts")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Teams", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Projects", "Projects")
                        .WithMany("Teams")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HUDEwiBlazor.Data.Models.Shifts", null)
                        .WithMany("Teams")
                        .HasForeignKey("ShiftsShiftID");

                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "TeamLeader")
                        .WithMany("Teams")
                        .HasForeignKey("TeamLeaderID");
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.Tokens", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "employee")
                        .WithMany("Tokens")
                        .HasForeignKey("EmployeesID")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("HUDEwiBlazor.Data.Models.WorkCardSign", b =>
                {
                    b.HasOne("HUDEwiBlazor.Data.Models.Employee", "employee")
                        .WithMany("WorkCardSigns")
                        .HasForeignKey("EmployeesID")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
